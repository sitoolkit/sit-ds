version: "3.7"
services:

  ldap:
    environment:
      LDAP_ADMIN_PASSWORD: ${LDAP_MANAGER_PASSWORD}
      LDAP_ORGANISATION: ${LDAP_ORGANISATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      TZ: ${OS_TIMEZONE}
    image: osixia/openldap:${VERSION_LDAP}
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_conf:/etc/ldap/slapd.d
    restart: always

  ldapadmin:
    depends_on:
      - ldap
    image : osixia/phpldapadmin:${VERSION_LDAPADMIN}
    ports:
      - 17443:443
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap
      TZ: ${OS_TIMEZONE}
    restart: always

  smtp:
    environment:
      MAIL_RELAY_HOST: ${MAIL_RELAY_HOST}
      MAIL_RELAY_PORT: ${MAIL_RELAY_PORT}
      MAIL_RELAY_USER: ${MAIL_RELAY_USER}
      MAIL_RELAY_PASS: ${MAIL_RELAY_PASS}
      TZ: ${OS_TIMEZONE}
    image: tecnativa/postfix-relay
    restart: always

  passchg:
    build:
      context: ./service/ssp
      args:
        VERSION: ${VERSION_PASSCHG}
    depends_on:
      - ldap
      - smtp
    env_file:
      - .env
    environment:
      MAIL_SMTP_HOST: smtp
      LDAP_URL: ldap://ldap
      TZ: ${OS_TIMEZONE}
    ports:
      - 81:80
    restart: always

  kvs:
    environment:
      TZ: ${OS_TIMEZONE}
    image: redis:${VERSION_KVS}
    restart: always

  dbms:
    image: postgres:${VERSION_DBMS}
    environment:
      TZ: ${OS_TIMEZONE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - ${DB_PORT}:5432
    restart: always
    volumes:
      - ./service/postgres/mount:/docker-entrypoint-initdb.d
      - dbms_data:/var/lib/postgresql/data

  scm:
    env_file:
      - .env
    build:
      context: ./service/gitbucket
      args:
        VERSION: ${VERSION_SCM}
    depends_on:
      - ldap
      - smtp
      - dbms
      - kvs
    environment:
      GITBUCKET_BASE_URL: ${PUBLIC_PROTOCOL}://${PUBLIC_HOST}/gitbucket
      GITBUCKET_DB_URL: ${DB_JDBC_URL}/gitbucket
      GITBUCKET_DB_USER: gitbucket
      GITBUCKET_DB_PASSWORD: gitbucket
      MAIL_SMTP_HOST: smtp
      TZ: ${OS_TIMEZONE}
    # ports:
    #   - 8081:8080
    restart: always
    volumes:
      - scm_data:/etc/gitbucket

  ci:
    build:
      context: ./service/jenkins
      args:
        VERSION: ${VERSION_CI}
    depends_on:
      - ldap
      - smtp
    env_file:
      - .env
    environment:
      MAIL_SMTP_HOST: smtp
      TZ: ${OS_TIMEZONE}
    ports:
      # - 8082:8080
      - 50000:50000
    restart: always
    volumes:
      - ci_data:/var/jenkins_home

  sca:
    build:
      context: ./service/sonarqube
      args:
        VERSION: ${VERSION_SCA}
    depends_on:
      - ldap
      - dbms
    env_file:
      - .env
    environment:
      SONARQUBE_JDBC_USERNAME: sonarqube
      SONARQUBE_JDBC_PASSWORD: sonarqube
      SONARQUBE_JDBC_URL: ${DB_JDBC_URL}/sonarqube
      TZ: ${OS_TIMEZONE}
    # ports:
    #   - 9000:9000
    restart: always
    volumes:
      - sca_data:/opt/sonarqube/data

  its:
    build:
      context: ./service/redmine
      args:
        VERSION: ${VERSION_ITS}
    depends_on:
      - dbms
      - ldap
      - smtp
    env_file:
      - .env
    environment:
      REDMINE_DB_POSTGRES: dbms
      REDMINE_DB_PORT: ${DB_PORT}
      REDMINE_DB_USERNAME: redmine
      REDMINE_DB_PASSWORD: redmine
      REDMINE_DB_DATABASE: redmine
      RAILS_RELATIVE_URL_ROOT: /redmine
      MAIL_SMTP_HOST: smtp
      TZ: ${OS_TIMEZONE}
    # ports:
    #   - 3000:3000
    restart: always
    volumes:
      - its_data:/usr/src/redmine/files

  arm:
    build:
      context: ./service/artifactory
      args:
        VERSION_ARM: ${VERSION_ARM}
        VERSION_UBUNTU: ${VERSION_UBUNTU}
    depends_on:
      - ldap
      - dbms
    env_file:
      - .env
    environment:
      TZ: ${OS_TIMEZONE}
      DB_TYPE: postgresql
      DB_USER: artifactory
      DB_PASSWORD: artifactory
    volumes:
      - arm_data:/var/opt/jfrog/artifactory
    restart: always

  proxy:
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - scm
      - ci
      - sca
      - its
      - arm
    environment:
        TZ: ${OS_TIMEZONE}
    image: nginx:${VERSION_PROXY}
    ports:
      - 80:80
    volumes:
      - ./service/nginx/mount/conf:/etc/nginx/conf.d
      - ./service/nginx/mount/html:/usr/share/nginx/html
    restart: always

  work:
    build:
      context: ./service/work
      args:
        VERSION: ${VERSION_WORK}
    env_file:
      - .env
    environment:
        TZ: ${OS_TIMEZONE}
    volumes:
      - ./service/work/mount:/mnt
    restart: always

  e2etest:
    build:
      context: ./e2etest
      args:
        VERSION: ${VERSION_UBUNTU}
    env_file:
      - .env
    environment:
        TZ: ${OS_TIMEZONE}
    volumes:
      - ./e2etest:/mnt
    working_dir: /mnt
    restart: always

volumes:
  ci_data:
  dbms_data:
  its_data:
  ldap_conf:
  ldap_data:
  sca_data:
  scm_data:
  arm_data:
